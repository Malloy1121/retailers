{"version":3,"sources":["webpack:///./src/app/auth/register/register.module.ts","webpack:///./src/app/auth/register/register.component.ts","webpack:///./src/app/auth/register/register.component.scss","webpack:///./src/app/auth/register/register.component.html"],"names":[],"mappings":"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","file":"3.chunk.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {RegisterComponent} from \"./register.component\";\nimport {ReactiveFormsModule} from \"@angular/forms\";\nimport {HttpModule} from \"@angular/http\";\n\n\nconst REGISTER_ROUTE:Routes=[\n  {path:\"\",component:RegisterComponent},\n  {path:\"*\",redirectTo:\"\",pathMatch:\"full\"}\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild(REGISTER_ROUTE),\n    ReactiveFormsModule\n  ],\n  declarations: [\n    RegisterComponent\n  ]\n})\nexport class RegisterModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/auth/register/register.module.ts","import {Component, OnInit} from '@angular/core';\nimport {Router} from \"@angular/router\";\nimport {FormBuilder, FormGroup, FormControl, Validators} from \"@angular/forms\";\nimport {AuthService} from \"../../service/auth.service\";\nimport \"rxjs/Rx\";\n\ndeclare var alert: any;\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n  private registerForm: FormGroup;\n\n  constructor(private router: Router, private fb: FormBuilder, private authService: AuthService) {\n  }\n\n  ngOnInit() {\n    this.registerForm = this.fb.group({\n      email: [\"\",\n        Validators.compose([\n          Validators.required,\n          Validators.pattern(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/)\n        ]),\n        Validators.composeAsync([\n          this.isEmailTaken.bind(this)\n        ])],\n      password: this.fb.group({\n        password1: [\"\",\n          Validators.compose([\n            Validators.required,\n            Validators.minLength(6),\n            Validators.maxLength(15)\n          ])],\n        password2: [\"\"]\n      }, {validator: this.comparePasswords}),\n      firstname: [\"\",\n        Validators.compose([\n          Validators.required,\n          Validators.maxLength(25)\n        ])],\n      lastname: [\"\",\n        Validators.compose([\n          Validators.required,\n          Validators.maxLength(25)\n        ])]\n      // street: [\"\"],\n      // suite: [\"\"],\n      // city: [\"\"],\n      // state: [\"\"],\n      // zipcode: [\"\"]\n    });\n  }\n\n\n  onSignup() {\n    if (this.registerForm.invalid) {\n      alert(\"Invalid Form Values\");\n      return;\n    }\n    const account = this.registerForm.value;\n    account.firstname = account.firstname.slice(0, 1).toUpperCase() + account.firstname.toLowerCase().slice(1, account.firstname.length);\n    account.lastname = account.lastname.slice(0, 1).toUpperCase() + account.lastname.toLowerCase().slice(1, account.lastname.length);\n    const password = account.password.password1;\n    const confirmedPassword = account.password.password2;\n    account.password = password;\n    account.confirmedPassword = confirmedPassword;\n    this.authService.signUp(account)\n      .toPromise()\n      .then(data => {\n        console.log(data);\n        if (data.result == true) {\n          this.router.navigateByUrl(\"/auth/login\");\n        }\n        else {\n          alert(\"Signup Failed!\");\n        }\n      });\n  }\n\n  comparePasswords(c: FormControl): any {\n    return c.get(\"password1\").value == c.get(\"password2\").value ? null : {samePassword: true};\n  }\n\n  isEmailTaken(c: FormControl) {\n    return this.authService.isEmailTaken(c.value)\n      .toPromise()\n      .then(data => {\n        if (data.result == true) {\n          return {\"isTaken\": true};\n        }\n        else {\n          return null;\n        }\n      });\n  }\n\n  getEmailError() {\n    const email = this.registerForm.get(\"email\");\n\n    if (email.valid)\n      return \" \";\n    if (email.hasError(\"pattern\")) {\n      return \"Invalid email address\";\n    }\n    if (email.hasError(\"isTaken\")) {\n      return \"This email is already taken\";\n    }\n\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/auth/register/register.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".register-container {\\n  width: 100%;\\n  max-width: 400px;\\n  margin: auto;\\n  border: 2px grey solid;\\n  border-radius: 5px; }\\n  .register-container .register-title-container {\\n    width: 100%;\\n    max-width: 200px;\\n    margin: auto; }\\n  .register-container form {\\n    width: 100%; }\\n    .register-container form table {\\n      width: 100%;\\n      max-width: 300px;\\n      margin: 0 auto 10px; }\\n      .register-container form table tr td {\\n        padding: 0;\\n        empty-cells: show; }\\n      .register-container form table tr.col-span-1 td {\\n        padding: 0 5px; }\\n        .register-container form table tr.col-span-1 td:first-child {\\n          padding-left: 0; }\\n        .register-container form table tr.col-span-1 td:last-child {\\n          padding-right: 0; }\\n    .register-container form input {\\n      height: 25px;\\n      width: 100%;\\n      text-indent: 8px; }\\n  .register-container .btn-register-container {\\n    text-align: center;\\n    margin: 15px auto;\\n    max-width: 300px; }\\n    .register-container .btn-register-container button {\\n      width: 100%;\\n      height: 30px; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/auth/register/register.component.scss\n// module id = 857\n// module chunks = 3","module.exports = \"<div class=\\\"content\\\">\\r\\n  <div class=\\\"register-container\\\">\\r\\n    <div class=\\\"register-title-container\\\">\\r\\n      <img src=\\\"/assets/images/signup.svg\\\" alt=\\\"sign up\\\">\\r\\n    </div>\\r\\n\\r\\n    <form (ngSubmit)=\\\"onSignup()\\\" [formGroup]=\\\"registerForm\\\">\\r\\n      <table>\\r\\n        <tr>\\r\\n          <td colspan=\\\"2\\\"><label for=\\\"register-email\\\">Email:</label></td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n          <td colspan=\\\"2\\\">\\r\\n            <input type=\\\"text\\\"\\r\\n                   id=\\\"register-email\\\"\\r\\n                   formControlName=\\\"email\\\"\\r\\n                   placeholder=\\\"Example: abc@abc.com\\\"\\r\\n                   autocomplete=\\\"off\\\">\\r\\n          </td>\\r\\n        </tr>\\r\\n        <tr class=\\\"form-validator\\\">\\r\\n          <td colspan=\\\"2\\\">{{getEmailError()}} &nbsp;</td>\\r\\n        </tr>\\r\\n\\r\\n        <tr>\\r\\n          <td colspan=\\\"2\\\"><label for=\\\"password1\\\">Password:</label></td>\\r\\n        </tr>\\r\\n        <tr formGroupName=\\\"password\\\">\\r\\n          <td colspan=\\\"2\\\">\\r\\n            <input type=\\\"password\\\"\\r\\n                   id=\\\"password1\\\"\\r\\n                   formControlName=\\\"password1\\\"\\r\\n                   placeholder=\\\"6-15 characters\\\">\\r\\n          </td>\\r\\n        </tr>\\r\\n        <tr class=\\\"form-validator\\\">\\r\\n          <td colspan=\\\"2\\\"\\r\\n              *ngIf=\\\"registerForm.get('password').get('password1').invalid&&registerForm.get('password').get('password1').touched\\\">\\r\\n            Invalid password\\r\\n          </td>\\r\\n          <td colspan=\\\"2\\\"\\r\\n              *ngIf=\\\"registerForm.get('password').get('password1').valid||!registerForm.get('password').get('password1').touched\\\">\\r\\n            &nbsp;</td>\\r\\n        </tr>\\r\\n\\r\\n        <tr>\\r\\n          <td colspan=\\\"2\\\"><label for=\\\"password2\\\">Confirm Password:</label></td>\\r\\n        </tr>\\r\\n        <tr formGroupName=\\\"password\\\">\\r\\n          <td colspan=\\\"2\\\">\\r\\n            <input type=\\\"password\\\"\\r\\n                   id=\\\"password2\\\"\\r\\n                   formControlName=\\\"password2\\\"\\r\\n                   placeholder=\\\"Enter password again\\\">\\r\\n          </td>\\r\\n        </tr>\\r\\n        <tr class=\\\"form-validator\\\">\\r\\n          <td colspan=\\\"2\\\"\\r\\n              *ngIf=\\\"registerForm.get('password').hasError('samePassword')&&registerForm.get('password').get('password2').touched\\\">\\r\\n            Two passwords do not match\\r\\n          </td>\\r\\n          <td colspan=\\\"2\\\"\\r\\n              *ngIf=\\\"!registerForm.get('password').hasError('samePassword')||!registerForm.get('password').get('password2').touched\\\">\\r\\n            &nbsp;</td>\\r\\n        </tr>\\r\\n\\r\\n        <tr class=\\\"col-span-1\\\">\\r\\n          <td><label for=\\\"register-firstname\\\">First Name:</label></td>\\r\\n          <td><label for=\\\"register-lastname\\\">Last Name:</label></td>\\r\\n        </tr>\\r\\n        <tr class=\\\"col-span-1\\\">\\r\\n          <td>\\r\\n            <input type=\\\"text\\\"\\r\\n                   id=\\\"register-firstname\\\"\\r\\n                   formControlName=\\\"firstname\\\"\\r\\n                   placeholder=\\\"1-25 characters\\\"\\r\\n                   autocomplete=\\\"off\\\">\\r\\n          </td>\\r\\n          <td>\\r\\n            <input type=\\\"text\\\"\\r\\n                   id=\\\"register-lastname\\\"\\r\\n                   formControlName=\\\"lastname\\\"\\r\\n                   placeholder=\\\"1-25 characters\\\"\\r\\n                   autocomplete=\\\"off\\\">\\r\\n          </td>\\r\\n        </tr>\\r\\n        <tr class=\\\"form-validator\\\">\\r\\n          <td *ngIf=\\\"registerForm.get('firstname').invalid&&registerForm.get('firstname').touched\\\">Invalid First Name\\r\\n          </td>\\r\\n          <td *ngIf=\\\"registerForm.get('firstname').valid||!registerForm.get('firstname').touched\\\">&nbsp;</td>\\r\\n          <td *ngIf=\\\"registerForm.get('lastname').invalid&&registerForm.get('lastname').touched\\\">Invalid Last Name</td>\\r\\n          <td *ngIf=\\\"registerForm.get('lastname').valid||!registerForm.get('lastname').touched\\\">&nbsp;</td>\\r\\n        </tr>\\r\\n\\r\\n        <tr>\\r\\n\\r\\n        </tr>\\r\\n        <tr>\\r\\n\\r\\n        </tr>\\r\\n\\r\\n        <!--<tr>-->\\r\\n        <!--<td><label for=\\\"register-street\\\">Street:</label></td>-->\\r\\n        <!--<td><input type=\\\"text\\\"-->\\r\\n        <!--id=\\\"register-street\\\"-->\\r\\n        <!--formControlName=\\\"street\\\"></td>-->\\r\\n        <!--</tr>-->\\r\\n\\r\\n        <!--<tr>-->\\r\\n        <!--<td><label for=\\\"register-suite\\\">Suite:</label></td>-->\\r\\n        <!--<td><input type=\\\"text\\\"-->\\r\\n        <!--id=\\\"register-suite\\\"-->\\r\\n        <!--formControlName=\\\"suite\\\"></td>-->\\r\\n        <!--</tr>-->\\r\\n\\r\\n        <!--<tr>-->\\r\\n        <!--<td><label for=\\\"register-city\\\">City:</label></td>-->\\r\\n        <!--<td><input type=\\\"text\\\"-->\\r\\n        <!--id=\\\"register-city\\\"-->\\r\\n        <!--formControlName=\\\"city\\\"></td>-->\\r\\n        <!--</tr>-->\\r\\n\\r\\n        <!--<tr>-->\\r\\n        <!--<td><label for=\\\"register-state\\\">State:</label></td>-->\\r\\n        <!--<td>-->\\r\\n        <!--<select id=\\\"register-state\\\"-->\\r\\n        <!--formControlName=\\\"state\\\">-->\\r\\n        <!--<option value=\\\"VA\\\">VA</option>-->\\r\\n        <!--<option value=\\\"PA\\\">PA</option>-->\\r\\n        <!--<option value=\\\"NY\\\">NY</option>-->\\r\\n        <!--</select>-->\\r\\n        <!--</td>-->\\r\\n        <!--</tr>-->\\r\\n\\r\\n        <!--<tr>-->\\r\\n        <!--<td><label for=\\\"register-zip\\\">Zip Code:</label></td>-->\\r\\n        <!--<td><input type=\\\"text\\\"-->\\r\\n        <!--id=\\\"register-zip\\\"-->\\r\\n        <!--formControlName=\\\"zipcode\\\"></td>-->\\r\\n        <!--</tr>-->\\r\\n      </table>\\r\\n      <div class=\\\"btn-register-container\\\">\\r\\n        <button type=\\\"submit\\\"\\r\\n                id=\\\"btn-register\\\"\\r\\n                [disabled]=\\\"registerForm.invalid||registerForm.pending\\\">Sign Up\\r\\n        </button>\\r\\n      </div>\\r\\n    </form>\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/auth/register/register.component.html\n// module id = 869\n// module chunks = 3"],"sourceRoot":""}